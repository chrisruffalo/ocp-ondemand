[remote]

[remote:children]
bastion
keycloak
nodes

[centos]

[centos:children]
bastion
keycloak

[rhel]

[rhel:children]
nodes

[tunneled]

[tunneled:children]
keycloak
nodes

# a good reference with many many more examples
# https://github.com/openshift/openshift-ansible/blob/master/inventory/byo/hosts.ose.example

[OSEv3]
# Create an OSEv3 group that contains the master, nodes, etcd, and lb groups.
# The lb group lets Ansible configure HAProxy as the load balancing solution.
# Comment lb out if your load balancer is pre-configured.
[OSEv3:children]
masters
nodes
etcd
lb

# Set variables common for all OSEv3 hosts
[OSEv3:vars]
openshift_release=v{{ ocp_version }}
deployment_type=openshift-enterprise

# Native high availbility cluster method with optional load balancer.
# If no lb group is defined installer assumes that a load balancer has
# been preconfigured. For installation the value of
# openshift_master_cluster_hostname must resolve to the load balancer
# or to one or all of the masters defined in the inventory if no load
# balancer is present.
openshift_master_cluster_method=native
openshift_master_cluster_hostname=master.{{ internal_zone }}
openshift_master_cluster_public_hostname=master.{{ hosted_zone }}
openshift_master_default_subdomain=apps.{{ hosted_zone }}

# change master console/api port from 8443 to 443 for direct access
openshift_master_api_port=443
openshift_master_console_port=443

# do not install examples
openshift_install_examples=false

# use multi-tenant network plugin instead of the default redhat/openshift-ovs-subnet
os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'

# updated node defaults
openshift_node_kubelet_args={'pods-per-core': ['10'], 'max-pods': ['250'], 'image-gc-high-threshold': ['90'], 'image-gc-low-threshold': ['80']}

# override the default controller lease ttl
#osm_controller_lease_ttl=30

# set cloud provider, the credentials are not stored because IAM roles are used
openshift_cloudprovider_kind=aws

# registry storage
openshift_hosted_registry_storage_kind=object
openshift_hosted_registry_storage_provider=s3
openshift_hosted_registry_storage_s3_bucket={{ bucket_name }}
openshift_hosted_registry_storage_s3_region={{ aws_region }}

# turn-off cockpit
osm_use_cockpit=False

# enable dynamic storage configuration
openshift_master_dynamic_provisioning_enabled=True
openshift_hosted_metrics_storage_kind=dynamic
openshift_hosted_logging_storage_kind=dynamic

# enable external URL for metrics
openshift_hosted_metrics_public_url=https://metrics.apps.{{ hosted_zone }}/hawkular/metrics

# host group for masters
[masters]
[masters:children]
masternodes

# host group for etcd
[etcd]
[etcd:children]
masternodes

# no LBs in this environment
[lb]

# host group for nodes, includes region info
[nodes]
{% for machine in ec2_info.infras %}
{% set labels = "{ 'region': 'infra', 'zone': 'ag-" + machine.tags.availability_group + "' }" %}
{{ machine.private_ip }} openshift_node_labels={{ labels | to_json }} ansible_become=true ansible_ssh_user={{ rhel_user }} ansible_ssh_common_args="-o ControlMaster=auto -o ControlPersist=30m -o ProxyCommand=\"ssh -i {{ playbook_dir }}/static/{{ safe_instance_name }}/identity.id_rsa {{ centos_user }}@{{ ec2_info.bastions[0].public_ip }} -W %h:%p \" -o IdentityFile={{ playbook_dir }}/static/{{ safe_instance_name }}/identity.id_rsa"
{% endfor %}
{% for machine in ec2_info.nodes %}
{% set labels = "{ 'region': 'primary', 'zone': 'ag-" + machine.tags.availability_group + "' }" %}
{{ machine.private_ip }} openshift_node_labels={{ labels | to_json }} ansible_become=true ansible_ssh_user={{ rhel_user }} ansible_ssh_common_args="-o ControlMaster=auto -o ControlPersist=30m -o ProxyCommand=\"ssh -i {{ playbook_dir }}/static/{{ safe_instance_name }}/identity.id_rsa {{ centos_user }}@{{ ec2_info.bastions[0].public_ip }} -W %h:%p \" -o IdentityFile={{ playbook_dir }}/static/{{ safe_instance_name }}/identity.id_rsa"
{% endfor %}

[nodes:children]
masternodes

[masternodes]
{% for machine in ec2_info.masters %}
{% set labels = "{ 'region': 'infra', 'zone': 'ag-" + machine.tags.availability_group + "' }" %}
{{ machine.private_ip }} openshift_node_labels={{ labels | to_json }} openshift_schedulable=false ansible_become=true ansible_ssh_user={{ rhel_user }} ansible_ssh_common_args="-o ControlMaster=auto -o ControlPersist=30m -o ProxyCommand=\"ssh -i {{ playbook_dir }}/static/{{ safe_instance_name }}/identity.id_rsa {{ centos_user }}@{{ ec2_info.bastions[0].public_ip }} -W %h:%p \" -o IdentityFile={{ playbook_dir }}/static/{{ safe_instance_name }}/identity.id_rsa"
{% endfor %}

[bastion]
{% for bastion in ec2_info.bastions %}
{{ bastion.public_ip }} ansible_ssh_private_key_file="static/{{ safe_instance_name }}/identity.id_rsa" ansible_ssh_user="{{ centos_user }}" ansible_become=true 
{% endfor %}

[keycloak]
{% for keycloak in ec2_info.keycloak %}
{{ keycloak.private_ip }} ansible_ssh_user="{{ centos_user }}" ansible_become=true ansible_ssh_common_args="-o ControlMaster=auto -o ControlPersist=30m -o ProxyCommand=\"ssh -i {{ playbook_dir }}/static/{{ safe_instance_name }}/identity.id_rsa {{ centos_user }}@{{ ec2_info.bastions[0].public_ip }} -W %h:%p \" -o IdentityFile={{ playbook_dir }}/static/{{ safe_instance_name }}/identity.id_rsa"
{% endfor %}
