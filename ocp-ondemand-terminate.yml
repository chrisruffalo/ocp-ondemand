---
# collect some information
- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: "Delete dynamic inventory portion"
      file:
        path: "./hosts/dynamic"
        state: absent

    - name: "Refresh inventory"
      meta: refresh_inventory

    - name: "Gather previous bastion instance details if any exist"
      ec2_remote_facts:
        access_key: "{{ aws_access_key }}"
        secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        filters:
          "tag:instance": "{{ instance_name }}"
          "tag:Name": "{{ instance_name }}-bastion"
          instance-state-name: running  
      register: bastion_instances

    - name: "Gather previous rhel instance details if any exist"
      ec2_remote_facts:
        access_key: "{{ aws_access_key }}"
        secret_key: "{{ aws_secret_key }}"
        region: "{{ aws_region }}"
        filters:
          "tag:instance": "{{ instance_name }}"
          "tag:os": "rhel7"
          instance-state-name: running
      register: rhel_instances

    - name: "Add hosting nodes to list of hosts"
      add_host:
        name: "{{ item.private_ip_address }}"
        ansible_ssh_user: "{{ rhel_user }}" 
        ansible_ssh_common_args: "-o ControlMaster=auto -o ControlPersist=30m -o ProxyCommand=\"ssh -i {{ playbook_dir }}/static/{{ instance_name }}.id_rsa {{ centos_user }}@{{ bastion_instances.instances[0].public_ip_address }} -W %h:%p \" -o IdentityFile={{ playbook_dir }}/static/{{ instance_name }}.id_rsa"
        ansible_become: true
        groups: 
          - "{{ instance_name }}"
          - "rhel"
          - "tunneled"
      with_items: "{{ rhel_instances.instances }}"
      when: bastion_instances.instances[0] and rhel_instances.instances and item.private_ip_address

# unsubscribe from rhel subscriptions
- hosts: rhel
  roles:
    - "rhn_unsubscribe"

# terminate instances
- hosts: localhost
  connection: local
  gather_facts: false
  roles:
    - "ec2_spindown"

